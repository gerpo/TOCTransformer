name: .NET Core Desktop

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: TOCTransfomer.sln                              # Replace with your solution name, i.e. MyWpfApp.sln.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration $env:Configuration --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Publish
      run: dotnet publish --configuration $env:Configuration --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: TocTransformer_${{ env.Configuration }}
        path: D:\a\TOCTransfomer\TOCTransfomer\TOCTransfomer\bin\${{ env.Configuration }}\net5.0-windows\win-x64\publish
      env:
        Configuration: ${{ matrix.configuration }}
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        Configuration: ${{ matrix.configuration }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path:  D:\a\TOCTransfomer\TOCTransfomer\TOCTransfomer\bin\${{ env.Configuration }}\net5.0-windows\win-x64\publish
        asset_name: TocTransfomrer_${{ env.Configuration }}.exe
        asset_content_type: application/exe
